<?php
/*
 Author: Andrews54757
 License: MIT (https://github.com/ThreeLetters/SuperSQL/blob/master/LICENSE)
 Source: https://github.com/ThreeLetters/SQL-Library
 Build: v2.5.0
 Built on: 08/08/2017
*/

class SQLHelper{public$s;public$connections;function __construct($a,$b=null,$c=null,$d=null,$e=array()){$this->connections=array();$f=gettype($a);if($f=="array"){if(gettype($a[0])=="array"){foreach($a as$g=>$h){$i=isset($h["host"])?$h["host"]: "";$b=isset($h["db"])?$h["db"]: "";$c=isset($h["user"])?$h["user"]: "";$d=isset($h["password"])?$h["password"]: "";$j=isset($h["options"])?$h["options"]: array();$k=self::connect($i,$b,$c,$d,$j);array_push($this->connections,$k);}}else{foreach($a as$g=>$h){array_push($this->connections,$h);}}$this->s=$this->connections[0];}else if($f=="string"){$this->s=self::connect($a,$b,$c,$d,$e);array_push($this->connections,$this->s);}else{array_push($this->connections,$a);$this->s=$a;}}static function connect($i,$b,$c,$d,$e=array()){$l="mysql";$m=false;if(gettype($e)=="string"){if(strpos($e,":")!==false){$m=$e;}else{$l=strtolower($e);}}else if(isset($e["dbtype"]))$l=strtolower($e["dbtype"]);if(!$m){$n="";switch($l){case "pgsql":$n="pgsql";$o=array("dbname"=>$b,"host"=>$i);if(isset($e["port"]))$o["port"]=$e["port"];break;case "sybase":$n="dblib";$o=array("dbname"=>$b,"host"=>$i);if(isset($e["port"]))$o["port"]=$e["port"];break;case "oracle":$n="oci";$o=array("dbname"=>isset($i)? "//".$i.":".(isset($e["port"])?$e["port"]: "1521")."/".$b :$b);break;default:$n="mysql";$o=array("dbname"=>$b);if(isset($e["socket"]))$o["unix_socket"]=$e["socket"];else{$o["host"]=$i;if(isset($e["port"]))$o["port"]=$e["port"];}break;}$m=$n.":";if(isset($e['charset'])){$o['charset']=$e['charset'];}$m=$n.":";$p=0;foreach($o as$g=>$q){if($p!=0){$m.=";";}$m.=$g."=".$q;$p++;}}return new SuperSQL($m,$c,$d);}private static function rmComments($r){$s=strpos($r,"#");if($s!==false){$r=substr($r,0,$s);}return trim($r);}private static function escape($t){$u=strtolower(gettype($t));if($u=="boolean"){$t=$t ? "1" : "0";}else if($u=="string"){$t="'".$t."'";}else if($u=="double"){$t=(int)$t;}else if($u=="null"){$t="0";}return$t;}private static function escape2($t){if(is_numeric($t)){return(int)$t;}else{return "'".$t."'";}}private static function includes($q,$v){foreach($r as$h){if(strpos($w,$h)!==false)return true;}return false;}private static function containsAdv($q){foreach($r as$g=>$q){if(gettype($q)=="array")return true;if(self::includes($g,array("[","#")))return true;if(self::includes($q,array("DISTINCT","INSERT INTO","INTO")))return true;}return false;}function change($x){$this->s=$this->connections[$x];return$this->s;}function getCon($y=false){if($y){return$this->connections;}else{return$this->s;}}function get($z,$aa,$ba,$ca=null){$da=$this->s->SELECT($z,$aa,$ba,$ca,1)->getData();return($da&&$da[0])?$da[0]: false;}function create($z,$o){$ea="CREATE TABLE `".$z."` (";$s=0;foreach($o as$g=>$q){if($s!=0){$ea.=", ";}$ea.="`".$g."` ".$q;$s++;}$ea.=")";return$this->s->query($ea);}function drop($z){return$this->s->query("DROP TABLE `".$z."`");}function replace($z,$o,$ba=array()){$fa=array();foreach($o as$g=>$q){$r="`".self::rmComments($g)."`";foreach($q as$ga=>$h){$r="REPLACE(".$r.", ".self::escape2($ga).", ".self::escape($h).")";}$fa["#".$g]=$r;}return$this->s->UPDATE($z,$fa,$ba);}function select($z,$aa=array(),$ba=array(),$ca=null,$ha=false){if(gettype($z)=="array"||self::containsAdv($aa)||self::containsAdv($ba)||$ca){return$this->s->SELECT($z,$aa,$ba,$ca,$ha);}else{if(gettype($ha)=="integer")$ha="LIMIT ".(int)$ha;return$this->s->sSELECT($z,$aa,$ba,$ha);}}function insert($z,$o){if(gettype($z)=="array"||self::containsAdv($o)){return$this->s->INSERT($z,$o);}else{return$this->s->sINSERT($z,$o);}}function update($z,$o,$ba=array()){if(gettype($z)=="array"||self::containsAdv($o)||self::containsAdv($ba)){return$this->s->UPDATE($z,$o,$ba);}else{return$this->s->sUPDATE($z,$o,$ba);}}function delete($z,$ba=array()){if(gettype($z)=="array"||self::containsAdv($ba)){return$this->s->DELETE($z,$ba);}else{return$this->s->sDELETE($z,$ba);}}}
?>